1. Инкапсуляция. 
Реализация концепции инкапсуляции обеспечивает совместное хранение данных и методов внутри объекта.
Как следствие, механизм инкапсуляции приводит к сокрытию информации о внутреннем "устройстве" объекта данных
(или, в терминах языков ООП, свойств и методов объекта) от пользователя того или иного объектно-ориентированного приложения.
Таким образом, пользователь, получающий программное обеспечение как сервис, оказывается изолированным от особенностей среды реализации.

Например, мы реализуем класс где полями являются какие-то переменные типа private. Тогда объект этого класса не может напрямую изменить 
значения этих полей или обратиться к ним. Для того, чтобы взаимодействовать с такими переменными используются геттеры и сеттеры. 
Это свойство используется во время проектирования классов.


2. Полиморфизм.
Это возможность оперирования объектами без однозначной идентификации их типов. 
Используется, когда определяется функция, вне зависимости от передаваемых значений. 

Например, перегрузка операторов в с++, мы будем иметь несколько функций с одинаковыми названиями,
но разными типами принимаемых значений, например int и float и в зависимости от того, какие данные
мы передаем, та функция и вызывается.


3. Наследование.
Наследование является механизмом повторного использования кода.

Например, мы реализуем модель зоопарка: у нас будут объекты классов люди(работники) и животные. Затем
от класса животные мы унаследуем млекопитающих, птиц, рептилий и тд. Так, производные классы будут обладать
какими-то общими полями, а какими-то различными.

4. Абстракция.
Это использование только тех характеристик объекта, которые с достаточной точностью представляют его в данной системе.
Основная идея состоит в том, чтобы представить объект минимальным набором полей и методов и при этом с достаточной точностью
для решаемой задачи.

Тот же пример с зоопарком, нам не важны какие-то отдельные детали сущностей животных или людей, мы описываем их лишь набором параметров
вроде имени, даты рождения, номера и тд.  и в нашей модели этой информации достаточно.

